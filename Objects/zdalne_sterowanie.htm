<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\zdalne_sterowanie.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\zdalne_sterowanie.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5050041: Last Updated: Wed May 20 06:38:01 2015
<BR><P>
<H3>Maximum Stack Usage =         80 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; bt_sendStr &rArr; bt_sendChar &rArr; to_UART_buffer &rArr; __aeabi_idivmod
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[2f]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[6]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">NMI_Handler</a><BR>
 <LI><a href="#[7]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">HardFault_Handler</a><BR>
 <LI><a href="#[8]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">SVC_Handler</a><BR>
 <LI><a href="#[9]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">PendSV_Handler</a><BR>
 <LI><a href="#[1a]">ADC0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1a]">ADC0_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1a]">ADC0_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[1b]">CMP0_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[24]">DAC0_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[b]">DMA0_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[c]">DMA1_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[d]">DMA2_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[e]">DMA3_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[10]">FTFA_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[7]">HardFault_Handler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[13]">I2C0_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[14]">I2C1_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[22]">I2S0_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[28]">LCD_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[12]">LLW_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[27]">LPTimer_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[11]">LVD_LVW_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[26]">MCG_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[6]">NMI_Handler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[21]">PIT_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[29]">PORTA_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[2a]">PORTC_PORTD_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[9]">PendSV_Handler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[1f]">RTC_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[20]">RTC_Seconds_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[f]">Reserved20_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[2d]">Reset_Handler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[15]">SPI0_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[16]">SPI1_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[8]">SVC_Handler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[a]">SysTick_Handler</a> from main.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[2b]">SystemInit</a> from system_mkl46z4.o(.text) referenced from startup_mkl46z4.o(.text)
 <LI><a href="#[1c]">TPM0_IRQHandler</a> from motordriver.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[1d]">TPM1_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[1e]">TPM2_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[25]">TSI0_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[17]">UART0_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[18]">UART1_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[19]">UART2_IRQHandler</a> from bluetooth.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[23]">USB0_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[2e]">__main</a> from __main.o(!!!main) referenced from startup_mkl46z4.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[2e]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[31]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[33]"></a>__scatterload_rt2</STRONG> (Thumb, 52 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[7a]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[7b]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[34]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[7c]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[38]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[7d]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[7e]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[7f]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[80]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[81]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[82]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[83]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[84]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[85]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[86]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[87]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[88]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[89]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[8a]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[8b]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[8c]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[8d]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[8e]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[8f]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[90]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[91]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[3d]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[92]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[93]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[94]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[95]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[96]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000003))

<P><STRONG><a name="[97]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B))

<P><STRONG><a name="[32]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[98]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[35]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[37]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[99]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[39]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; bt_sendStr &rArr; bt_sendChar &rArr; to_UART_buffer &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9a]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[44]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[3c]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[9b]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[3e]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[2d]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))

<P><STRONG><a name="[6]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>ADC0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>CMP0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>DAC0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>DMA0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>DMA1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>DMA2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>DMA3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>DefaultISR</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text), UNUSED, KEPT)

<P><STRONG><a name="[10]"></a>FTFA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>I2C0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>I2S0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>LCD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>LLW_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>LPTimer_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>LVD_LVW_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>MCG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>PIT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>PORTA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>PORTC_PORTD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>RTC_Seconds_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>Reserved20_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>SPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>TPM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>TPM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TSI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>UART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>UART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>USB0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_mkl46z4.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[2b]"></a>SystemInit</STRONG> (Thumb, 180 bytes, Stack size 0 bytes, system_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(.text)
</UL>
<P><STRONG><a name="[40]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 322 bytes, Stack size 16 bytes, system_mkl46z4.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SystemCoreClockUpdate &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9c]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[9d]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[9e]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[3b]"></a>exit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[9f]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[79]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[a0]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[3f]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[a1]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[a2]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[a3]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[45]"></a>from_UART_buffer</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, bluetooth.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = from_UART_buffer &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_getChar
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_sendChar
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_IRQHandler
</UL>

<P><STRONG><a name="[4a]"></a>buf_empty</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, bluetooth.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_getChar
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_IRQHandler
</UL>

<P><STRONG><a name="[47]"></a>overwrite_UART_buffer</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, bluetooth.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = overwrite_UART_buffer &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_sendChar
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_IRQHandler
</UL>

<P><STRONG><a name="[48]"></a>to_UART_buffer</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, bluetooth.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = to_UART_buffer &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_sendChar
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_IRQHandler
</UL>

<P><STRONG><a name="[49]"></a>buf_full</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, bluetooth.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_sendChar
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_IRQHandler
</UL>

<P><STRONG><a name="[19]"></a>UART2_IRQHandler</STRONG> (Thumb, 136 bytes, Stack size 8 bytes, bluetooth.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UART2_IRQHandler &rArr; to_UART_buffer &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buf_full
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;to_UART_buffer
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;overwrite_UART_buffer
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buf_empty
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;from_UART_buffer
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_ClearPendingIRQ
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>buf_clear</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, bluetooth.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_init
</UL>

<P><STRONG><a name="[4c]"></a>bt_init</STRONG> (Thumb, 228 bytes, Stack size 16 bytes, bluetooth.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bt_init &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buf_clear
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_ClearPendingIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4f]"></a>bt_sendChar</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, bluetooth.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = bt_sendChar &rArr; to_UART_buffer &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buf_full
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;to_UART_buffer
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;overwrite_UART_buffer
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;from_UART_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_sendStr
</UL>

<P><STRONG><a name="[50]"></a>bt_sendStr</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, bluetooth.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = bt_sendStr &rArr; bt_sendChar &rArr; to_UART_buffer &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_sendChar
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[52]"></a>bt_getChar</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, bluetooth.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = bt_getChar &rArr; from_UART_buffer &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buf_empty
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;from_UART_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_getStr
</UL>

<P><STRONG><a name="[53]"></a>bt_getStr</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, bluetooth.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = bt_getStr &rArr; bt_getChar &rArr; from_UART_buffer &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_getChar
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5c]"></a>ledsInitialize</STRONG> (Thumb, 304 bytes, Stack size 8 bytes, leds.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ledsInitialize
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[58]"></a>ledGreenOn</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, leds.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phaseB
</UL>

<P><STRONG><a name="[a4]"></a>ledGreenOff</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, leds.o(.text), UNUSED)

<P><STRONG><a name="[56]"></a>ledRedOn</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, leds.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phaseA
</UL>

<P><STRONG><a name="[a5]"></a>ledRedOff</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, leds.o(.text), UNUSED)

<P><STRONG><a name="[55]"></a>ledsOff</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, leds.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phaseC
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phaseB
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phaseA
</UL>

<P><STRONG><a name="[a6]"></a>ledsOn</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, leds.o(.text), UNUSED)

<P><STRONG><a name="[54]"></a>phaseA</STRONG> (Thumb, 26 bytes, Stack size 4 bytes, leds.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ledsOff
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ledRedOn
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nextLedState
</UL>

<P><STRONG><a name="[57]"></a>phaseB</STRONG> (Thumb, 26 bytes, Stack size 4 bytes, leds.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ledsOff
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ledGreenOn
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nextLedState
</UL>

<P><STRONG><a name="[59]"></a>phaseC</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, leds.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ledsOff
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nextLedState
</UL>

<P><STRONG><a name="[a7]"></a>startStopFSM</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, leds.o(.text), UNUSED)

<P><STRONG><a name="[5a]"></a>nextLedState</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, leds.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phaseC
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phaseB
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phaseA
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ledsService1ms
</UL>

<P><STRONG><a name="[5b]"></a>ledsService1ms</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, leds.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nextLedState
</UL>

<P><STRONG><a name="[a8]"></a>fastSlowFSM</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, leds.o(.text), UNUSED)

<P><STRONG><a name="[a9]"></a>changeDirLED</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, leds.o(.text), UNUSED)

<P><STRONG><a name="[60]"></a>buzzer_init</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[aa]"></a>WRC_start</STRONG> (Thumb, 296 bytes, Stack size 0 bytes, main.o(.text), UNUSED)

<P><STRONG><a name="[63]"></a>horner_get_val</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = horner_get_val
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a]"></a>SysTick_Handler</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, main.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>main</STRONG> (Thumb, 268 bytes, Stack size 24 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = main &rArr; bt_sendStr &rArr; bt_sendChar &rArr; to_UART_buffer &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sLCD_setByType
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sLCD_Init
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motorDriverInit
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driveStop
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driveReverseRightTrack
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driveReverseLeftTrack
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driveReverse
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driveForwardRightTrack
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driveForwardLeftTrack
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driveForward
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;horner_get_val
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buzzer_init
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ledsInitialize
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_getStr
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_sendStr
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_sendChar
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_init
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[5f]"></a>motorDriverInit</STRONG> (Thumb, 316 bytes, Stack size 8 bytes, motordriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = motorDriverInit &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[62]"></a>driveStop</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, motordriver.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM0_IRQHandler
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6c]"></a>driveStopRight</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, motordriver.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM0_IRQHandler
</UL>

<P><STRONG><a name="[6b]"></a>driveStopLeft</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, motordriver.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM0_IRQHandler
</UL>

<P><STRONG><a name="[1c]"></a>TPM0_IRQHandler</STRONG> (Thumb, 178 bytes, Stack size 4 bytes, motordriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = TPM0_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driveStopLeft
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driveStopRight
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driveStop
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>driveForwardLeftTrack</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, motordriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = driveForwardLeftTrack &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driveForward
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6d]"></a>driveForwardDistLeftTrack</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, motordriver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;turnRight
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driveForwardDist
</UL>

<P><STRONG><a name="[67]"></a>driveForwardRightTrack</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, motordriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = driveForwardRightTrack &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driveForward
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6e]"></a>driveForwardDistRightTrack</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, motordriver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;turnLeft
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driveForwardDist
</UL>

<P><STRONG><a name="[66]"></a>driveReverseLeftTrack</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, motordriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = driveReverseLeftTrack &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driveReverse
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6f]"></a>driveReverseDistLeftTrack</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, motordriver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;turnLeft
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driveReverseDist
</UL>

<P><STRONG><a name="[69]"></a>driveReverseRightTrack</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, motordriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = driveReverseRightTrack &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driveReverse
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[70]"></a>driveReverseDistRightTrack</STRONG> (Thumb, 138 bytes, Stack size 16 bytes, motordriver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;turnRight
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driveReverseDist
</UL>

<P><STRONG><a name="[64]"></a>driveForward</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, motordriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = driveForward &rArr; driveForwardRightTrack &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driveForwardRightTrack
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driveForwardLeftTrack
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[71]"></a>driveForwardDist</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, motordriver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driveForwardDistRightTrack
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driveForwardDistLeftTrack
</UL>

<P><STRONG><a name="[65]"></a>driveReverse</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, motordriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = driveReverse &rArr; driveReverseRightTrack &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driveReverseRightTrack
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driveReverseLeftTrack
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[72]"></a>driveReverseDist</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, motordriver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driveReverseDistRightTrack
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driveReverseDistLeftTrack
</UL>

<P><STRONG><a name="[74]"></a>wait4</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, motordriver.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acceleration
</UL>

<P><STRONG><a name="[73]"></a>acceleration</STRONG> (Thumb, 236 bytes, Stack size 8 bytes, motordriver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait4
</UL>

<P><STRONG><a name="[75]"></a>turnLeft</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, motordriver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driveReverseDistLeftTrack
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driveForwardDistRightTrack
</UL>

<P><STRONG><a name="[76]"></a>turnRight</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, motordriver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driveReverseDistRightTrack
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driveForwardDistLeftTrack
</UL>

<P><STRONG><a name="[ab]"></a>wait2</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, motordriver.o(.text), UNUSED)

<P><STRONG><a name="[ac]"></a>wait3</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, motordriver.o(.text), UNUSED)

<P><STRONG><a name="[5d]"></a>sLCD_Init</STRONG> (Thumb, 202 bytes, Stack size 0 bytes, skmj_slcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ad]"></a>sLCD_setDot</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, skmj_slcd.o(.text), UNUSED)

<P><STRONG><a name="[ae]"></a>sLCD_clrDot</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, skmj_slcd.o(.text), UNUSED)

<P><STRONG><a name="[78]"></a>sLCD_error</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, skmj_slcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sLCD_set
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sLCD_setByType
</UL>

<P><STRONG><a name="[77]"></a>sLCD_set</STRONG> (Thumb, 80 bytes, Stack size 12 bytes, skmj_slcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = sLCD_set
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sLCD_error
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sLCD_setByType
</UL>

<P><STRONG><a name="[5e]"></a>sLCD_setByType</STRONG> (Thumb, 264 bytes, Stack size 24 bytes, skmj_slcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = sLCD_setByType &rArr; sLCD_set
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sLCD_set
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sLCD_error
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[51]"></a>strlen</STRONG> (Thumb, 62 bytes, Stack size 12 bytes, strlen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_sendStr
</UL>

<P><STRONG><a name="[af]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[41]"></a>__aeabi_uidivmod</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acceleration
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sLCD_setByType
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_init
</UL>

<P><STRONG><a name="[b0]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[46]"></a>__aeabi_idivmod</STRONG> (Thumb, 326 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;turnRight
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;turnLeft
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driveReverseDistRightTrack
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driveReverseDistLeftTrack
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driveForwardDistRightTrack
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driveForwardDistLeftTrack
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driveReverseRightTrack
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driveReverseLeftTrack
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driveForwardRightTrack
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driveForwardLeftTrack
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nextLedState
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;to_UART_buffer
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;overwrite_UART_buffer
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;from_UART_buffer
</UL>

<P><STRONG><a name="[36]"></a>__user_setup_stackheap</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[42]"></a>__ARM_common_switch8</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, system_mkl46z4.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[4b]"></a>NVIC_ClearPendingIRQ</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, bluetooth.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_init
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_IRQHandler
</UL>

<P><STRONG><a name="[4d]"></a>NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, bluetooth.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_init
</UL>

<P><STRONG><a name="[61]"></a>NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6a]"></a>NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, motordriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motorDriverInit
</UL>
<P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[43]"></a>_call_atexit_fns</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>
<HR></body></html>
